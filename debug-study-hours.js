// Script de diagn√≥stico completo para debugging de horarios
// Ejecutar en la consola del navegador (F12) en /study-hours

console.log("\nüî¨ ========================================");
console.log("üî¨ DIAGN√ìSTICO COMPLETO DE HORARIOS");
console.log("üî¨ ========================================\n");

// 1. Verificar userId
console.log("üë§ 1. Usuario:");
const userDataFromContext = window.__NEXT_DATA__?.props?.pageProps?.userData;
console.log("   userData:", userDataFromContext);

// 2. Verificar localStorage
console.log("\nüì¶ 2. LocalStorage:");
const welcomeData = localStorage.getItem("welcomeFormData");
if (welcomeData) {
  const data = JSON.parse(welcomeData);
  console.log("   ‚úÖ welcomeFormData encontrado");
  console.log("   Contenido:", data);
  console.log("   D√≠as con horarios:", data.tiempoDisponible?.length || 0);
  data.tiempoDisponible?.forEach((day, idx) => {
    console.log(`   ${idx + 1}. ${day.day}: ${day.timeSlots.length} slots`);
    day.timeSlots.forEach((slot, slotIdx) => {
      console.log(`      ${slotIdx + 1}. ${slot.start} - ${slot.end}`);
    });
  });
} else {
  console.log("   ‚ö†Ô∏è No hay welcomeFormData en localStorage");
}

// 3. Verificar estado de React
console.log("\n‚öõÔ∏è 3. Estado de React:");
console.log("   INSTRUCCIONES:");
console.log("   - Abre React DevTools (extensi√≥n del navegador)");
console.log('   - Busca el componente "StudyHoursManager"');
console.log('   - Revisa el estado "schedule"');
console.log('   - Revisa el hook "useUserPreferences"');

// 4. Verificar elementos DOM
console.log("\nüåê 4. Elementos DOM:");
const totalElement = document.querySelector("[data-total-hours]");
if (totalElement) {
  console.log("   ‚úÖ Elemento de total encontrado");
  console.log("   Contenido:", totalElement.textContent);
} else {
  console.log("   ‚ö†Ô∏è No se encontr√≥ elemento de total");
}

// Buscar tarjetas de d√≠as
const dayCards = document.querySelectorAll('div[role="button"], .MuiCard-root');
console.log(`   Tarjetas encontradas: ${dayCards.length}`);

// 5. Funci√≥n de prueba interactiva
console.log("\nüß™ 5. Funci√≥n de prueba:");

window.debugSchedule = function () {
  console.log("\nüîç Debug Schedule ejecutado:");

  // Intentar obtener el estado desde React DevTools
  const reactRoot = document.querySelector("#__next");
  if (reactRoot && reactRoot._reactRootContainer) {
    console.log("   ‚úÖ React root encontrado");
  }

  // Verificar si hay datos visibles
  const text = document.body.innerText;
  const hasHours = text.includes("Total semanal");
  const hasDays = text.includes("Sin horarios configurados");

  console.log("   P√°gina contiene:");
  console.log('     - "Total semanal":', hasHours ? "‚úÖ" : "‚ùå");
  console.log('     - "Sin horarios configurados":', hasDays ? "‚úÖ" : "‚ùå");

  // Buscar texto de horas
  const hoursMatch = text.match(/(\d+\.?\d*)\s*horas configuradas/);
  if (hoursMatch) {
    console.log(`     - Total detectado: ${hoursMatch[1]} horas`);
  }

  return {
    hasHours,
    hasDays,
    totalHours: hoursMatch ? hoursMatch[1] : null,
  };
};

// 6. Verificar migraci√≥n
console.log("\nüîÑ 6. Estado de migraci√≥n:");
console.log("   Busca en la consola logs que digan:");
console.log('   - "üîÑ Starting study blocks migration"');
console.log('   - "‚úÖ Study blocks migration completed"');
console.log('   - "üìä Loaded X study blocks from backend"');

// 7. Instrucciones finales
console.log("\nüìã 7. INSTRUCCIONES:");
console.log("   A. Ejecuta: debugSchedule()");
console.log("   B. Recarga la p√°gina (F5) y busca los logs de:");
console.log("      - [StudyHoursManager] useEffect triggered");
console.log("      - [StudyHoursManager] preferences:");
console.log("      - [getDaySchedule] Buscando");
console.log("   C. Si no ves logs, es posible que:");
console.log("      - No hay datos en el backend");
console.log("      - La migraci√≥n no se ejecut√≥");
console.log("      - El usuario no tiene usuarioId");

console.log("\n‚úÖ Script de diagn√≥stico cargado");
console.log("üîß Ejecuta: debugSchedule()");
console.log("üî¨ ========================================\n");
